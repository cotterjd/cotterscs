{"version":3,"sources":["xhr.js","cookie.js","Modal/index.js","utils/index.js","App.js","serviceWorker.js","index.js"],"names":["xhr","id","fetch","method","body","JSON","stringify","query","concat","headers","Content-Type","makeCookieString","name","value","days","expires","date","Date","setTime","getTime","toGMTString","getCookie","parts","document","cookie","split","length","decodeURIComponent","pop","shift","console","log","Esc","styled","span","_templateObject","Modal","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Container","div","_templateObject2","width","height","open","styles","react_default","a","createElement","onClick","close","className","children","React","Component","utils","sortedJobNames","unitCodes","sortedJobs","R","x","createdAt","groupObj","keys","addCode","comp","code","setState","showOtherModal","oldState","chosenCodes","includes","filter","CodeButton","button","App_templateObject","SaveButton","App_templateObject2","SaveJobButton","_templateObject3","EndJobButton","_templateObject4","AddCodesButton","_templateObject5","handleCSVDownload","columns","data","CSVHead","reduce","soFar","column","slice","CSVBody","row","join","trim","csv","blob","Blob","type","dataURI","URL","window","webkitURL","downloadURI","createObjectURL","link","setAttribute","appendChild","click","removeChild","formatData","map","unit","codes","deviceId","job","reverse","getUnitCodesAndDownload","then","r","json","withCSTTime","uc","format","allUnitCodes","catch","error","firstCodeMatches","getOldRecords","jobName","unitName","deleteOldRecord","recordToDelete","saveCodes","createUnitCode","errors","goodResponse","toConsumableArray","response","newUnitCode","addCodesAndReset","App","updateOtherDesc","evt","otherDesc","target","closeOtherModal","addCodes","_this$state","assertThisInitialized","cc","foobar","createRef","userName","showModal","unServicedCodes","servicedWithIssuesCodes","servicedNoIssuesCodes","_this2","placeholder","style","padding","boxSizing","onChange","updateUserName","updateJobName","alert","addUnitName","i","key","listStyleType","unitCodeArray","_","redoCode","deviceUnitCodes","downloadServiceNoIssuesUnitCodes","some","downloadServiceWithIssuesUnitCodes","unitCode","downloadUnservicedUnitCodesFromDevice","downloadAllUnitCodesFromDevice","jobUnitCodes","sortedCodes","downloadPerJob","Modal_Modal","onBlur","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27c95bdd.chunk.js","sourcesContent":["const del = (id) => {\r\n    return fetch('https://us1.prisma.sh/jordan-cotter-820a2c/cruise/dev', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        query: `\r\n          mutation {\r\n            deleteUnitCode(where: {\r\n              id: \"${id}\"\r\n            }) {\r\n              id\r\n            }\r\n          }\r\n        `\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n  }\r\n; // eslint-disable-line semi\r\n\r\nexport default { del }\r\n","import { pipe } from 'ramda'\r\nexport function getDomain(w) {\r\n  const url = w.location.origin\r\n  if (url.includes('localhost')) return 'localhost'\r\n\r\n\treturn  pipe(\r\n        x => x.split('.')\r\n      , xs => xs.slice(-2)\r\n      , xs => xs.join('.')\r\n      , x => `.${x}`,\r\n    )(url)\r\n}\r\nfunction makeCookieString(name, value, days) {\r\n  let expires = ''\r\n  if (days) {\r\n    const date = new Date()\r\n    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000))\r\n    expires = `; expires=${date.toGMTString()}`\r\n  }\r\n  return `${name}=${value}${expires};domain=cotterjd.github.io;path=/`\r\n}\r\nfunction getCookie(name) {\r\n  const value = `; ${document.cookie}`\r\n  const parts = value.split(`; ${name}=`)\r\n  if (parts.length === 2) {\r\n return (\r\n      decodeURIComponent(\r\n        parts\r\n          .pop()\r\n          .split(';')\r\n          .shift(),\r\n      ) || ''\r\n    )\r\n}\r\n  return ''\r\n}\r\nfunction deleteCookieString(name) {\r\n  return `${name}=; path=/; domain=${getDomain(window)}; expires=Thu, 01 Jan 1970 00:00:01 GMT;`\r\n}\r\n\r\nexport { makeCookieString, getCookie, deleteCookieString }\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst\r\n  log = console.log // eslint-disable-line\r\n\r\n, Esc = styled.span`\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 5px;\r\n    font-size: 24px;\r\n    opacity: 0.5;\r\n\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  `\r\n; // eslint-disable-line semi\r\n\r\n// NOT IN USE. CONSIDER PURGING\r\nexport default class Modal extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context)\r\n    this.state = {\r\n    }\r\n  }\r\n  render() {\r\n    const { props } = this\r\n    , Container = styled.div`\r\n        width: ${props.width || 'auto'};\r\n        height: ${props.height || 'auto'};\r\n        box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.1);\r\n        background-color: #ffffff;\r\n        top: 0;\r\n        left: 0;\r\n\r\n        overflow-y: auto;\r\n        padding: 30px;\r\n        display: ${props => props.open ? 'block' : 'none'};\r\n        z-index: 3;\r\n        position: fixed;\r\n        ${props.styles}\r\n      `\r\n    ; // eslint-disable-line semi\r\n    return (\r\n      <Container open={props.open}>\r\n        <Esc\r\n          onClick={props.close}\r\n          className=\"clickable\"\r\n        >&#x2715;</Esc>\r\n        {props.children}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  close: PropTypes.func.isRequired,\r\n  height: PropTypes.string,\r\n  width: PropTypes.string,\r\n}\r\n","import * as R from 'ramda'\r\n\r\nexport default {\r\n\tsortedJobNames,\r\n}\r\n\r\nfunction sortedJobNames (unitCodes) {\r\n\tconst sortedJobs = R.sort(R.descend(x => new Date(x.createdAt)), unitCodes)\r\n\tconsole.log(`Sortedjobs`, sortedJobs)\r\n\tconst groupObj = R.groupBy(R.prop(`job`), sortedJobs)\r\n\tconsole.log(`groupobj`, groupObj)\r\n\tconst jobNames = Object.keys(groupObj)\r\n\r\n\treturn jobNames\r\n}","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport './App.css';\r\nimport * as R from 'ramda'\r\nimport xhr from './xhr'\r\nimport {format} from 'date-fns'\r\nimport { makeCookieString, getCookie } from './cookie'\r\nimport Modal from './Modal'\r\nimport utils from './utils'\r\n\r\nconst log = console.log // eslint-disable-line no-unused-vars\r\n\r\n, addCode = (comp, code) => {\r\n    if (code === `OTHER` || code === `Broken Damper - Other`) {\r\n      comp.setState({showOtherModal: true})\r\n    }\r\n    comp.setState((oldState, props) => ({\r\n      chosenCodes: oldState.chosenCodes.includes(code) ? oldState.chosenCodes.filter(x => x !== code) : oldState.chosenCodes.concat(code)\r\n    }))\r\n  }\r\n, addUnitName = (comp, evt) => comp.setState({unitName: evt.target.value})\r\n, updateUserName = (comp, evt) => comp.setState({userName: evt.target.value})\r\n, updateJobName = (comp, evt) => comp.setState({job: evt.target.value})\r\n, saveUserName = (comp) => {\r\n    document.cookie=makeCookieString('userName', comp.state.userName, 365)\r\n    comp.setState({deviceId: comp.state.userName})\r\n  }\r\n, saveJobName = (comp) => {\r\n    if (!comp.state.job) alert(`Property name required`)\r\n    document.cookie=makeCookieString('job', comp.state.jobName, 365)\r\n    comp.setState({jobName: comp.state.job})\r\n  }\r\n, endJob = (comp) => {\r\n    document.cookie=makeCookieString('job', ``, 365)\r\n    comp.setState({jobName: ``, job: ``})\r\n  }\r\n, CodeButton = styled.button`\r\n    background-color: ${props => props.state.chosenCodes.includes(props.code) ? 'green' : 'none'};\r\n    color: ${props => props.state.chosenCodes.includes(props.code) ? 'white' : (props.code.includes(`Completed`) ? 'green' : 'none')};\r\n    width: 99%;\r\n    padding: 15px;\r\n  `\r\n, SaveButton = styled.button`\r\n    background-color: #805716;\r\n    color: #ffffff;\r\n    width: 99%;\r\n    padding: 25px 15px;\r\n    margin: 5px;\r\n    border-radius: 10px;\r\n  `\r\n, SaveJobButton = styled.button`\r\n    background-color: green;\r\n    color: #ffffff;\r\n    width: 99%;\r\n    padding: 25px 15px;\r\n    margin: 5px;\r\n    border-radius: 10px;\r\n    text-transform: uppercase;\r\n  `\r\n, EndJobButton = styled.button`\r\n    background-color: red;\r\n    color: #ffffff;\r\n    width: 99%;\r\n    padding: 25px 15px;\r\n    margin: 5px;\r\n    border-radius: 10px;\r\n    text-transform: uppercase;\r\n  `\r\n, AddCodesButton = styled.button`\r\n    width: 100%;\r\n    padding: 20px;\r\n    background-color: #74fff8;\r\n  `\r\n// [String] -> [Array] -> null\r\n, handleCSVDownload = (columns, data) => {\r\n    const CSVHead = `${columns.reduce((soFar, column) => `${soFar}\"${column}\",`, '').slice(0, -1)}\\r\\n`\r\n    let CSVBody = data.reduce((soFar, row) => `${soFar}\"${row.join('\",\"')}\"\\r\\n`, [])\r\n    if (typeof CSVBody === \"string\") {\r\n      CSVBody = CSVBody.trim()\r\n    } else CSVBody = ''\r\n    /* taken from react-csv */\r\n    const csv = `${CSVHead}${CSVBody}`\r\n    const blob = new Blob([csv], { type: 'text/csv' })\r\n    const dataURI = `data:text/csv;charset=utf-8,${csv}`\r\n\r\n    const URL = window.URL || window.webkitURL\r\n    const downloadURI = typeof URL.createObjectURL === 'undefined' ? dataURI : URL.createObjectURL(blob)\r\n\r\n    const link = document.createElement('a')\r\n    link.setAttribute('href', downloadURI)\r\n    link.setAttribute('download', 'tableDownload.csv')\r\n    document.body.appendChild(link)\r\n    link.click()\r\n    document.body.removeChild(link)\r\n  }\r\n, formatData = data => R.sortBy(R.props('createdAt'), data).map(x => [ x.unit, x.codes, x.createdAt, x.deviceId, x.job ]).reverse()\r\n, getUnitCodesAndDownload = (comp) => {\r\n    return fetch('https://us1.prisma.sh/jordan-cotter-820a2c/cruise/dev', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        query: `\r\n          query {\r\n            unitCodes {\r\n              unit\r\n              codes\r\n              createdAt\r\n              deviceId\r\n              job\r\n            }\r\n          }\r\n        `\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    .then(r => r.json())\r\n    .then(r => {\r\n      const withCSTTime = r.data.unitCodes.map(uc => R.assoc('createdAt', format(new Date(uc.createdAt), 'MM/DD/YYYY h:mm'), uc))\r\n      comp.setState({allUnitCodes: withCSTTime})\r\n    })\r\n    .catch(console.error)\r\n  }\r\n  // assume codes are put in correctly, only first has to match because they'll be the same type\r\n, firstCodeMatches = (codes, x) => codes.includes(x.codes.split(', ')[0])\r\n, downloadServiceWithIssuesUnitCodes = (comp, deviceId) => {\r\n    const deviceUnitCodes = comp.state.allUnitCodes.filter(\r\n        x => x.deviceId === deviceId && (firstCodeMatches(comp.state.servicedWithIssuesCodes, x) || x.codes.split(`, `).some(code => code.includes(`Broken Damper - Other`) ) )\r\n        )\r\n    const data = formatData(deviceUnitCodes)\r\n    handleCSVDownload(comp.state.columns, data)\r\n    comp.setState({showModal: false})\r\n  }\r\n, downloadServiceNoIssuesUnitCodes = (comp, deviceId) => {\r\n    const deviceUnitCodes = comp.state.allUnitCodes.filter(x => x.deviceId === deviceId && firstCodeMatches(comp.state.servicedNoIssuesCodes, x))\r\n    const data = formatData(deviceUnitCodes)\r\n    handleCSVDownload(comp.state.columns, data)\r\n    comp.setState({showModal: false})\r\n  }\r\n, downloadPerJob = (comp, job) => {\r\n    const jobUnitCodes = comp.state.allUnitCodes.filter(x => x.job === job)\r\n    const sortedCodes = R.sortBy(R.prop(`codes`), jobUnitCodes) \r\n    const data = formatData(sortedCodes)\r\n    handleCSVDownload(comp.state.columns, data)\r\n  }\r\n, downloadUnservicedUnitCodesFromDevice = (comp, deviceId) => {\r\n    const deviceUnitCodes = comp.state.allUnitCodes\r\n      .filter(\r\n        unitCode => unitCode.deviceId === deviceId &&\r\n        // if not No issues and not serviced with issues, it's unserviced\r\n        !firstCodeMatches(comp.state.servicedWithIssuesCodes, unitCode) &&\r\n        !firstCodeMatches(comp.state.servicedNoIssuesCodes, unitCode)\r\n      )\r\n    const data = formatData(deviceUnitCodes)\r\n    handleCSVDownload(comp.state.columns, data)\r\n    comp.setState({showModal: false})\r\n  }\r\n, downloadAllUnitCodesFromDevice = (comp, deviceId) => {\r\n    const deviceUnitCodes = comp.state.allUnitCodes\r\n      .filter(unitCode => unitCode.deviceId === deviceId)\r\n    const data = formatData(deviceUnitCodes)\r\n    handleCSVDownload(comp.state.columns, data)\r\n    comp.setState({showModal: false})\r\n  }\r\n, getOldRecords = (comp) => {\r\n    return fetch('https://us1.prisma.sh/jordan-cotter-820a2c/cruise/dev', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        query: `\r\n          {\r\n            unitCodes(orderBy: createdAt_DESC where: {\r\n              job: \"${comp.state.jobName}\"\r\n              unit: \"${comp.state.unitName}\"\r\n            }) {\r\n              id\r\n              createdAt\r\n              codes\r\n              job\r\n            }\r\n          }\r\n        `\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    .then(r => r.json())\r\n    .catch(console.error)\r\n  }\r\n, deleteOldRecord = (comp, recordToDelete) => {\r\n    return xhr.del(recordToDelete.id)\r\n      .then(r => r.json())\r\n      .catch(console.error)\r\n  }\r\n, redoCode = (comp, unitCodeArray, i) => {\r\n    const id = R.head(unitCodeArray) \r\n    const unitName = R.head(R.tail(unitCodeArray))\r\n    // const chosenCodes = R.last(unitCodeArray).split(`, `)\r\n    xhr.del(id)\r\n      .then(r => r.json())\r\n      .then(_ => {\r\n        comp.setState({\r\n          unitName, \r\n          // chosenCodes,\r\n        })\r\n      })\r\n      .catch(console.error)\r\n  }\r\n, goodResponse = (r) => {\r\n    return r && r.data && r.data.createUnitCode && !r.errors\r\n  }\r\n, addCodesAndReset = (response, oldState) => {\r\n    const newUnitCode = response.data.createUnitCode\r\n    return {\r\n      unitCodes: [...oldState.unitCodes, [newUnitCode.id, oldState.unitName, oldState.chosenCodes.join(', ')]],\r\n      chosenCodes: [],\r\n      unitName: '',\r\n    }\r\n  }\r\n, saveCodes = (comp) => {\r\n    return fetch('https://us1.prisma.sh/jordan-cotter-820a2c/cruise/dev', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        query: `\r\n          mutation {\r\n            createUnitCode(data: {\r\n              deviceId: \"${comp.state.deviceId}\"\r\n              unit: \"${comp.state.unitName}\"\r\n              codes: \"${comp.state.chosenCodes.join(', ')}\"\r\n              job: \"${comp.state.jobName}\"\r\n            }) {\r\n              id job unit\r\n            }\r\n          }\r\n        `\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    .then(r => r.json())\r\n    .then(r => {\r\n       if(goodResponse(r)) {\r\n         console.log(`RESPONSE`, r)\r\n         comp.setState(oldState => addCodesAndReset(r, oldState))\r\n       } else {\r\n         comp.setState((oldState) => ({\r\n           unitCodes: [...oldState.unitCodes, [oldState.unitName, 'NOT SAVED. make sure you have a internet connection and try again']],\r\n           chosenCodes: [],\r\n           unitName: '',\r\n         }))\r\n       }\r\n       }\r\n    )\r\n    .catch(console.error)\r\n  }\r\n;\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.foobar = React.createRef()\r\n    this.state = {\r\n      chosenCodes: [],\r\n      unitName: '',\r\n      unitCodes: [],\r\n      allUnitCodes: [],\r\n      userName: '',\r\n      deviceId: getCookie('userName'),\r\n      jobName: getCookie('job'),\r\n      showModal: false,\r\n      showOtherModal: false,\r\n      otherDesc: ``,\r\n      columns: ['unit', 'codes', 'created date', 'device ID', `job`],\r\n      unServicedCodes: [\r\n        'TV'\r\n      , 'Dog'\r\n      , 'Blocked'\r\n      , 'Locked From The Inside'\r\n      , 'No Key'\r\n      , 'Key Not Work'\r\n      , 'Skip Per Management'\r\n      , 'Minor'\r\n      , 'Denied Entry'\r\n      , 'see css'\r\n      , 'OTHER'\r\n      ],\r\n      servicedWithIssuesCodes: [\r\n        'Missing Chimney Cap'\r\n      , 'Missing Damper'\r\n      , 'Broken Damper - Other'\r\n      , 'Broken Damper - stays open'\r\n      , 'Broken Damper - closed/won\\'t open'\r\n      , 'Broken Damper - Not Connected'\r\n      , 'Missing Spark Screen'\r\n      , 'Damaged Spark Screen'\r\n      , 'Damaged Left Refractory Panel'\r\n      , 'Damaged Back Refractory Panel'\r\n      , 'Damaged Right Refractory Panel'\r\n      , 'Damaged Base Panel'\r\n      , 'Missing Left Refractory Panel'\r\n      , 'Missing Back Refractory Panel'\r\n      , 'Missing Right Refractory Panel'\r\n      , 'Missing Base Panel'\r\n      , 'see  css'\r\n      , 'Went Back'\r\n      ],\r\n      servicedNoIssuesCodes: [\r\n        `Completed. No Issues.`\r\n      ],\r\n    }\r\n    getUnitCodesAndDownload(this)\r\n  }\r\n\r\n  updateOtherDesc = evt => {\r\n    this.setState({\r\n      otherDesc: evt.target.value,\r\n      showOtherModal: false,\r\n    })\r\n  }\r\n  closeOtherModal = evt => {\r\n    this.setState({ showOtherModal: false })\r\n  }\r\n  addCodes = evt => {\r\n    const { unitName, chosenCodes, otherDesc } = this.state\r\n    if (!!unitName && chosenCodes.length) {\r\n      if (chosenCodes.includes('Went Back')) {\r\n        getOldRecords(this)\r\n        .then(r => {\r\n          if(!r.errors) {\r\n            deleteOldRecord(this, R.head(r.data.unitCodes))\r\n          } else {\r\n            console.log(r.errors)\r\n          }\r\n        })\r\n        .then(r => saveCodes(this))\r\n      } else if (chosenCodes.includes(`OTHER`)) {\r\n        this.setState(state => ({\r\n          chosenCodes: chosenCodes.map(cc => {\r\n            if (cc === `OTHER`) return `OTHER ${otherDesc}`\r\n            return cc\r\n          })\r\n        }), () => saveCodes(this))\r\n      } else if (chosenCodes.includes(`Broken Damper - Other`)) {\r\n        this.setState(state => ({\r\n          chosenCodes: chosenCodes.map(cc => {\r\n            if (cc === `Broken Damper - Other`) return `Broken Damper - Other ${otherDesc}`\r\n            return cc\r\n          })\r\n        }), () => saveCodes(this))\r\n      } else {\r\n        saveCodes(this)\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { state } = this\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          !state.deviceId &&\r\n            <div>\r\n              <input\r\n                name=\"username\"\r\n                placeholder=\"User Name\"\r\n                style={{width: '100%', padding: '20px', boxSizing: 'border-box'}}\r\n                value={state.userName}\r\n                onChange={evt => updateUserName(this, evt)}\r\n                type=\"text\"\r\n              />\r\n              <SaveButton onClick={evt => saveUserName(this)}>Save User Name</SaveButton>\r\n            </div>\r\n        }\r\n        {\r\n          !state.jobName &&\r\n            <div>\r\n              <input\r\n                name=\"jobname\"\r\n                placeholder=\"Property Name\"\r\n                style={{width: '100%', padding: '20px', boxSizing: 'border-box'}}\r\n                value={state.job}\r\n                onChange={evt => updateJobName(this, evt)}\r\n                type=\"text\"\r\n              />\r\n              <SaveJobButton onClick={evt => saveJobName(this)}>Start new property</SaveJobButton>\r\n            </div>\r\n        }\r\n        <input name=\"unit\" placeholder=\"Unit\" style={{width: '100%', padding: '20px', boxSizing: 'border-box'}} value={state.unitName} onChange={evt => addUnitName(this, evt)} type=\"text\" />\r\n        {\r\n          state.servicedWithIssuesCodes.map((x, i) =>\r\n            <CodeButton\r\n              state={state}\r\n              code={x}\r\n              key={x}\r\n              onClick={evt => addCode(this, x)}\r\n            >\r\n              {x}\r\n            </CodeButton>)\r\n        }\r\n        <br />\r\n        {\r\n          state.servicedNoIssuesCodes.map((x, i) =>\r\n            <CodeButton\r\n              state={state}\r\n              code={x}\r\n              key={x}\r\n              onClick={evt => addCode(this, x)}\r\n            >\r\n              {x}\r\n            </CodeButton>)\r\n        }\r\n        <br />\r\n        <br />\r\n        {\r\n          state.unServicedCodes.map((x, i) =>\r\n            <CodeButton\r\n              state={state}\r\n              code={x}\r\n              key={x}\r\n              onClick={evt => addCode(this, x)}\r\n            >\r\n              {x}\r\n            </CodeButton>)\r\n        }\r\n        <AddCodesButton onClick={this.addCodes}>Add Codes</AddCodesButton>\r\n        <ul id=\"report\" style={{\r\n          listStyleType: 'none'\r\n        }}>\r\n        {\r\n          state.unitCodes.map((x, i) => <li key={i}>\r\n              {x}<button onClick={evt => redoCode(this, x, i)}>Redo</button>\r\n              </li>)\r\n        }\r\n        </ul>\r\n        { !!this.state.jobName &&<EndJobButton onClick={evt => endJob(this)}>End Property</EndJobButton>}\r\n        <h4>Reports By User/type</h4>\r\n        {\r\n          Object.keys(R.groupBy(R.prop('deviceId'), this.state.allUnitCodes))\r\n            .map((x, i) =>\r\n              (<div key={i}>\r\n                <button onClick={evt => downloadServiceNoIssuesUnitCodes(this, x)}>{`${x} (Completed. No Issues)`}</button>\r\n                <button onClick={evt => downloadServiceWithIssuesUnitCodes(this, x)}>{`${x} (Completed with issues)`}</button>\r\n                <button onClick={evt => downloadUnservicedUnitCodesFromDevice(this, x)}>{`${x} (NA)`}</button>\r\n                <button onClick={evt => downloadAllUnitCodesFromDevice(this, x)}>{`All`}</button>\r\n              </div>)\r\n            )\r\n        }\r\n        <h4>Property Reports</h4>\r\n        {\r\n          utils.sortedJobNames(this.state.allUnitCodes).map(jobName => {\r\n            return <button key={jobName} onClick={_ => downloadPerJob(this, jobName)}>{jobName}</button>\r\n          })\r\n        }\r\n        <Modal\r\n          open={state.showOtherModal}\r\n          close={evt => this.setState({showOtherModal: false})}\r\n        >\r\n          <h4>Add description</h4>\r\n          <input type=\"text\" value={this.otherDesc} onBlur={this.updateOtherDesc} />\r\n          <button onClick={evt => this.setState({showOtherModal: false})}>Save</button>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}