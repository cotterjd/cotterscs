{"version":3,"sources":["cookie.js","Modal/index.js","App.js","serviceWorker.js","index.js"],"names":["getCookie","name","parts","concat","document","cookie","split","length","decodeURIComponent","pop","shift","console","log","Esc","styled","span","_templateObject","Modal","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Container","div","_templateObject2","width","height","open","styles","react_default","a","createElement","onClick","close","className","children","React","Component","addCode","comp","code","setState","oldState","chosenCodes","includes","filter","x","saveUserName","value","days","expires","date","Date","setTime","getTime","toGMTString","makeCookieString","userName","deviceId","addCodes","_comp$state","unitName","fetch","method","body","JSON","stringify","query","headers","Content-Type","then","r","json","catch","error","getOldRecords","recordToDelete","errors","R","data","unitCodes","id","saveCodes","CodeButton","button","App_templateObject","SaveButton","App_templateObject2","handleCSVDownload","columns","CSVHead","reduce","soFar","column","slice","CSVBody","row","join","trim","csv","blob","Blob","type","dataURI","URL","window","webkitURL","downloadURI","createObjectURL","link","setAttribute","appendChild","click","removeChild","formatData","map","unit","codes","createdAt","reverse","createUnitCode","toConsumableArray","App","unServicedCodes","servicedCodes","Missing Chimney Cap","Missing Damper","Broken Damper","Missing Spark Screen","Damaged Spark Screen","Damaged Left Refractory Panel","Damaged Back Refractory Panel","Damaged Right Refractory Panel","Damaged Base Panel","Missing Left Refractory Panel","Missing Back Refractory Panel","Missing Right Refractory Panel","Missing Base Panel","TV","Dog","Blocked","Locked From The Inside","No Key","Key Not Work","Skip Per Management","Minor","Denied Entry","Went Back","allUnitCodes","showModal","_this2","placeholder","style","padding","boxSizing","onChange","evt","target","updateUserName","addUnitName","i","key","backgroundColor","listStyleType","marginBottom","withCSTTime","uc","format","Modal_Modal","keys","deviceUnitCodes","downloadServicedUnitCodesFromDevice","downloadUnservicedUnitCodesFromDevice","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91fef368.chunk.js","sourcesContent":["import { pipe } from 'ramda'\nexport function getDomain(w) {\n  const url = w.location.origin\n  if (url.includes('localhost')) return 'localhost'\n\n\treturn  pipe(\n        x => x.split('.')\n      , xs => xs.slice(-2)\n      , xs => xs.join('.')\n      , x => `.${x}`,\n    )(url)\n}\nfunction makeCookieString(name, value, days) {\n  let expires = ''\n  if (days) {\n    const date = new Date()\n    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000))\n    expires = `; expires=${date.toGMTString()}`\n  }\n  return `${name}=${value}${expires};domain=cotterjd.github.io;path=/`\n}\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`\n  const parts = value.split(`; ${name}=`)\n  if (parts.length === 2) {\n return (\n      decodeURIComponent(\n        parts\n          .pop()\n          .split(';')\n          .shift(),\n      ) || ''\n    )\n}\n  return ''\n}\nfunction deleteCookieString(name) {\n  return `${name}=; path=/; domain=${getDomain(window)}; expires=Thu, 01 Jan 1970 00:00:01 GMT;`\n}\n\nexport { makeCookieString, getCookie, deleteCookieString }\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst\n  log = console.log // eslint-disable-line\n\n, Esc = styled.span`\n    position: absolute;\n    right: 10px;\n    top: 5px;\n    font-size: 24px;\n    opacity: 0.5;\n\n    :hover {\n      cursor: pointer;\n    }\n  `\n; // eslint-disable-line semi\n\n// NOT IN USE. CONSIDER PURGING\nexport default class Modal extends React.Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n    }\n  }\n  render() {\n    const { props } = this\n    , Container = styled.div`\n        width: ${props.width || 'auto'};\n        height: ${props.height || 'auto'};\n        box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.1);\n        background-color: #ffffff;\n        top: 0;\n        left: 0;\n\n        overflow-y: scroll;\n        padding: 30px;\n        display: ${props => props.open ? 'block' : 'none'};\n        z-index: 3;\n        position: fixed;\n        ${props.styles}\n      `\n    ; // eslint-disable-line semi\n    return (\n      <Container open={props.open}>\n        <Esc\n          onClick={props.close}\n          className=\"clickable\"\n        >&#x2715;</Esc>\n        {props.children}\n      </Container>\n    )\n  }\n}\n\nModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  close: PropTypes.func.isRequired,\n  height: PropTypes.string,\n  width: PropTypes.string,\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport * as R from 'ramda'\nimport {subHours, format} from 'date-fns'\nimport { makeCookieString, getCookie } from './cookie'\nimport Modal from './Modal'\n\nconst log = console.log // eslint-disable-line no-unused-vars\n\n, addCode = (comp, code) => {\n    comp.setState((oldState, props) => ({\n      chosenCodes: oldState.chosenCodes.includes(code) ? oldState.chosenCodes.filter(x => x !== code) : oldState.chosenCodes.concat(code)\n    }))\n  }\n, addUnitName = (comp, evt) => comp.setState({unitName: evt.target.value})\n, updateUserName = (comp, evt) => comp.setState({userName: evt.target.value})\n, saveUserName = (comp) => {\n    document.cookie=makeCookieString('userName', comp.state.userName, 365)\n    comp.setState({deviceId: comp.state.userName})\n  }\n, addCodes = comp => {\n    const {unitName, chosenCodes} = comp.state\n    if (!!unitName && chosenCodes.length) {\n      if (chosenCodes.includes('Went Back')) {\n        getOldRecords(comp)\n        .then(r => {\n          if(!r.errors) {\n            deleteOldRecord(comp, R.head(r.data.unitCodes))\n          } else {\n            console.log(r.errors)\n          }\n        })\n        .then(r => saveCodes(comp))\n      } else {\n        saveCodes(comp)\n      }\n    }\n\n  }\n, CodeButton = styled.button`\n    background-color: ${props => props.state.chosenCodes.includes(props.code) ? 'green' : 'none'};\n    color: ${props => props.state.chosenCodes.includes(props.code) ? 'white' : 'none'};\n    width: 99%;\n    padding: 15px;\n  `\n, SaveButton = styled.button`\n    background-color: #805716;\n    color: #ffffff;\n    width: 99%;\n    padding: 25px 15px;\n    margin: 5px;\n    border-radius: 10px;\n  `\n// [String] -> [Array] -> null\n, handleCSVDownload = (columns, data) => {\n    const CSVHead = `${columns.reduce((soFar, column) => `${soFar}\"${column}\",`, '').slice(0, -1)}\\r\\n`\n    let CSVBody = data.reduce((soFar, row) => `${soFar}\"${row.join('\",\"')}\"\\r\\n`, [])\n    if (typeof CSVBody === \"string\") {\n      CSVBody = CSVBody.trim()\n    } else CSVBody = ''\n    /* taken from react-csv */\n    const csv = `${CSVHead}${CSVBody}`\n    const blob = new Blob([csv], { type: 'text/csv' })\n    const dataURI = `data:text/csv;charset=utf-8,${csv}`\n\n    const URL = window.URL || window.webkitURL\n    const downloadURI = typeof URL.createObjectURL === 'undefined' ? dataURI : URL.createObjectURL(blob)\n\n    const link = document.createElement('a')\n    link.setAttribute('href', downloadURI)\n    link.setAttribute('download', 'tableDownload.csv')\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }\n, formatData = data => R.sortBy(R.props('createdAt'), data).map(x => [ x.unit, x.codes, x.createdAt, x.deviceId ]).reverse()\n, getUnitCodesAndDownload = (comp) => {\n    return fetch('https://us1.prisma.sh/jordan-cotter-820a2c/cruise/dev', {\n      method: 'POST',\n      body: JSON.stringify({\n        query: `\n          query {\n            unitCodes {\n              unit\n              codes\n              createdAt\n              deviceId\n            }\n          }\n        `\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    .then(r => r.json())\n    .then(r => {\n      //const withCSTTime = r.data.unitCodes.map(uc => R.assoc('createdAt', subHours(new Date(uc.createdAt), 5), uc))\n      const withCSTTime = r.data.unitCodes.map(uc => R.assoc('createdAt', format(new Date(uc.createdAt), 'MM/DD/YYYY h:mm'), uc))\n\n/*var result = format(\n  new Date(2014, 1, 11),\n  'MM/DD/YYYY'\n)*/\n      comp.setState({allUnitCodes: withCSTTime, showModal: true})\n    })\n    .catch(console.error)\n  }\n, downloadServicedUnitCodesFromDevice = (comp, deviceId) => {\n    const deviceUnitCodes = comp.state.allUnitCodes.filter(x => x.deviceId === deviceId && comp.state.servicedCodes.includes(x.codes.split(', ')[0]))\n    const data = formatData(deviceUnitCodes)\n    handleCSVDownload(['unit', 'codes', 'created date', 'device ID'], data)\n    comp.setState({showModal: false})\n  }\n, downloadUnservicedUnitCodesFromDevice = (comp, deviceId) => {\n    const deviceUnitCodes = comp.state.allUnitCodes.filter(x => x.deviceId === deviceId && comp.state.unServicedCodes.includes(x.codes.split(', ')[0]))\n    const data = formatData(deviceUnitCodes)\n    handleCSVDownload(['unit', 'codes', 'created date', 'device ID'], data)\n    comp.setState({showModal: false})\n  }\n;\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      unServicedCodes: [\n        'TV'\n      , 'Dog'\n      , 'Blocked'\n      , 'Locked From The Inside'\n      , 'No Key'\n      , 'Key Not Work'\n      , 'Skip Per Management'\n      , 'Minor'\n      , 'Denied Entry'\n      , 'see css'\n      , 'OTHER'\n      ],\n      servicedCodes: [\n        'Missing Chimney Cap'\n      , 'Missing Damper'\n      , 'Broken Damper'\n      , 'Missing Spark Screen'\n      , 'Damaged Spark Screen'\n      , 'Damaged Left Refractory Panel'\n      , 'Damaged Back Refractory Panel'\n      , 'Damaged Right Refractory Panel'\n      , 'Damaged Base Panel'\n      , 'Missing Left Refractory Panel'\n      , 'Missing Back Refractory Panel'\n      , 'Missing Right Refractory Panel'\n      , 'Missing Base Panel'\n      , 'see  css'\n      , 'Went Back'\n      ],\n      codes: {\n        'Missing Chimney Cap': 'Missing Chimney Cap'\n      , 'Missing Damper': 'Missing Damper'\n      , 'Broken Damper': 'Broken Damper'\n      , 'Missing Spark Screen': 'Missing Spark Screen'\n      , 'Damaged Spark Screen': 'Damaged Spark Screen'\n      , 'Damaged Left Refractory Panel': 'Damaged Left Refractory Panel'\n      , 'Damaged Back Refractory Panel': 'Damaged Back Refractory Panel'\n      , 'Damaged Right Refractory Panel': 'Damaged Right Refractory Panel'\n      , 'Damaged Base Panel': 'Damaged Base Panel'\n      , 'Missing Left Refractory Panel': 'Missing Left Refractory Panel'\n      , 'Missing Back Refractory Panel': 'Missing Back Refractory Panel'\n      , 'Missing Right Refractory Panel': 'Missing Right Refractory Panel'\n      , 'Missing Base Panel': 'Missing Base Panel'\n      , 'TV': 'TV'\n      , 'Dog': 'Dog'\n      , 'Blocked': 'Blocked'\n      , 'Locked From The Inside': 'Locked from the inside'\n      , 'No Key': 'No Key'\n      , 'Key Not Work': 'Key Not Work'\n      , 'Skip Per Management': 'Skip Per Management'\n      , 'Minor': 'Minor'\n      , 'Denied Entry': 'Denied Entry'\n      , 'Went Back': 'Went Back'\n      },\n      chosenCodes: [],\n      unitName: '',\n      unitCodes: [],\n      allUnitCodes: [],\n      userName: '',\n      deviceId: getCookie('userName'),\n      showModal: false,\n    }\n  }\n  render() {\n    const { state } = this\n\n    return (\n      <div>\n        {!state.deviceId &&<div><input name=\"username\" placeholder=\"User Name\" style={{width: '100%', padding: '20px', boxSizing: 'border-box'}} value={state.userName} onChange={evt => updateUserName(this, evt)} type=\"text\" />\n        <SaveButton onClick={evt => saveUserName(this)}>Save User Name</SaveButton></div>}\n        <input name=\"unit\" placeholder=\"Unit\" style={{width: '100%', padding: '20px', boxSizing: 'border-box'}} value={state.unitName} onChange={evt => addUnitName(this, evt)} type=\"text\" />\n\n        {\n          /*Object.keys(state.codes).map((k, i) =>\n            <CodeButton\n              state={state}\n              code={k}\n              key={k}\n              onClick={evt => addCode(this, k)}\n            >\n              {state.codes[k]}\n            </CodeButton>)*/\n        }\n        {\n          state.servicedCodes.map((x, i) =>\n            <CodeButton\n              state={state}\n              code={x}\n              key={x}\n              onClick={evt => addCode(this, x)}\n            >\n              {x}\n            </CodeButton>)\n        }\n        <br />\n        <br />\n        <br />\n        {\n          state.unServicedCodes.map((x, i) =>\n            <CodeButton\n              state={state}\n              code={x}\n              key={x}\n              onClick={evt => addCode(this, x)}\n            >\n              {x}\n            </CodeButton>)\n        }\n        <button style={{\n          width: '100%',\n          padding: '20px',\n          backgroundColor: '#74fff8'\n        }} onClick={evt => addCodes(this)}>Add Codes</button>\n        <ul id=\"report\" style={{\n          listStyleType: 'none'\n        }}>\n        {\n          state.unitCodes.map((x, i) => <li key={i}>{x}</li>)\n        }\n        </ul>\n        <button style={{\n          padding: '25px',\n          width: '100%',\n          marginBottom: '50px'\n        }} onClick={evt => getUnitCodesAndDownload(this)}>Download Report</button>\n        <Modal\n          open={state.showModal}\n          close={evt => this.setState({showModal: false})}\n        >\n          <h4>Which device to you want to download codes from</h4>\n          {\n            Object.keys(R.groupBy(R.prop('deviceId'), this.state.allUnitCodes))\n              .map(x =>\n                (<div>\n                  <button key={x} onClick={evt => downloadServicedUnitCodesFromDevice(this, x)}>{`Device ${x}`}</button>\n                  <button key={x} onClick={evt => downloadUnservicedUnitCodesFromDevice(this, x)}>{`Device ${x} (NA)`}</button>\n                </div>)\n              )\n          }\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction saveCodes(comp) {\n      return fetch('https://us1.prisma.sh/jordan-cotter-820a2c/cruise/dev', {\n        method: 'POST',\n        body: JSON.stringify({\n          query: `\n            mutation {\n              createUnitCode(data: {\n                deviceId: \"${comp.state.deviceId}\"\n                unit: \"${comp.state.unitName}\"\n                codes: \"${comp.state.chosenCodes.join(', ')}\"\n              }) {\n                id\n              }\n            }\n          `\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(r => r.json())\n      .then(r => {\n         if(!!r && !!r.data && !!r.data.createUnitCode && !r.errors) {\n           comp.setState((oldState) => ({\n             unitCodes: [...oldState.unitCodes, [oldState.unitName, oldState.chosenCodes.join(', ')]],\n             chosenCodes: [],\n             unitName: '',\n           }))\n         } else {\n           comp.setState((oldState) => ({\n             unitCodes: [...oldState.unitCodes, [oldState.unitName, 'NOT SAVED. make sure you have a internet connection and try again']],\n             chosenCodes: [],\n             unitName: '',\n           }))\n         }\n         }\n      )\n      .catch(console.error)\n}\nfunction deleteOldRecord(comp, recordToDelete) {\n      return fetch('https://us1.prisma.sh/jordan-cotter-820a2c/cruise/dev', {\n        method: 'POST',\n        body: JSON.stringify({\n          query: `\n            mutation {\n              deleteUnitCode(where: {\n                id: \"${recordToDelete.id}\"\n              }) {\n                id\n              }\n            }\n          `\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(r => r.json())\n      .catch(console.error)\n}\nfunction getOldRecords(comp) {\n      return fetch('https://us1.prisma.sh/jordan-cotter-820a2c/cruise/dev', {\n        method: 'POST',\n        body: JSON.stringify({\n          query: `\n            {\n              unitCodes(orderBy: createdAt_DESC where: {\n                deviceId: \"${comp.state.deviceId}\"\n                unit: \"${comp.state.unitName}\"\n              }) {\n                id\n                createdAt\n                codes\n              }\n            }\n          `\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(r => r.json())\n      .catch(console.error)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}