{"version":3,"sources":["cookie.js","Modal/index.js","App.js","serviceWorker.js","index.js"],"names":["getCookie","name","parts","concat","document","cookie","split","length","decodeURIComponent","pop","shift","console","log","Esc","styled","span","_templateObject","Modal","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Container","div","_templateObject2","width","height","open","styles","react_default","a","createElement","onClick","close","className","children","React","Component","addCode","comp","code","setState","showOtherModal","oldState","chosenCodes","includes","filter","x","saveUserName","value","days","expires","date","Date","setTime","getTime","toGMTString","makeCookieString","userName","deviceId","addCodes","_comp$state","unitName","otherDesc","fetch","method","body","JSON","stringify","query","headers","Content-Type","then","r","json","catch","error","getOldRecords","recordToDelete","errors","R","data","unitCodes","id","saveCodes","map","cc","CodeButton","button","App_templateObject","SaveButton","App_templateObject2","AddCodesButton","_templateObject3","handleCSVDownload","columns","CSVHead","reduce","soFar","column","slice","CSVBody","row","join","trim","csv","blob","Blob","type","dataURI","URL","window","webkitURL","downloadURI","createObjectURL","link","setAttribute","appendChild","click","removeChild","formatData","unit","codes","createdAt","reverse","createUnitCode","toConsumableArray","App","updateOtherDesc","evt","target","closeOtherModal","unServicedCodes","servicedCodes","allUnitCodes","showModal","_this2","placeholder","style","padding","boxSizing","onChange","updateUserName","addUnitName","i","key","listStyleType","marginBottom","withCSTTime","uc","format","Modal_Modal","keys","deviceUnitCodes","downloadServicedUnitCodesFromDevice","unitCode","downloadUnservicedUnitCodesFromDevice","onBlur","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yRAqBA,SAASA,EAAUC,GACjB,IACMC,EADK,KAAAC,OAAQC,SAASC,QACRC,MAAN,KAAAH,OAAiBF,EAAjB,MACd,OAAqB,IAAjBC,EAAMK,QAENC,mBACEN,EACGO,MACAH,MAAM,KACNI,UAIF,4lBC7BDC,QAAQC,IADhB,IAGEC,EAAMC,IAAOC,KAAVC,KAcgBC,cACnB,SAAAA,EAAYC,EAAOC,GAAS,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IAC1BG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAML,EAAOC,KACRQ,MAAQ,GAFaP,wEAMpB,IAAEF,EAAUK,KAAVL,MACNU,EAAYd,IAAOe,IADfC,IAEOZ,EAAMa,OAAS,OACdb,EAAMc,QAAU,OAQf,SAAAd,GAAK,OAAIA,EAAMe,KAAO,QAAU,QAGzCf,EAAMgB,QAGZ,OACEC,EAAAC,EAAAC,cAACT,EAAD,CAAWK,KAAMf,EAAMe,MACrBE,EAAAC,EAAAC,cAACxB,EAAD,CACEyB,QAASpB,EAAMqB,MACfC,UAAU,aAFZ,UAICtB,EAAMuB,iBA9BoBC,IAAMC,ygBCb7BhC,QAAQC,IAApB,IAEEgC,EAAU,SAACC,EAAMC,GACP,UAAJA,GACFD,EAAKE,SAAS,CAACC,gBAAgB,IAEjCH,EAAKE,SAAS,SAACE,EAAU/B,GAAX,MAAsB,CAClCgC,YAAaD,EAASC,YAAYC,SAASL,GAAQG,EAASC,YAAYE,OAAO,SAAAC,GAAC,OAAIA,IAAMP,IAAQG,EAASC,YAAY/C,OAAO2C,OAKlIQ,EAAe,SAACT,GACdzC,SAASC,OFTb,SAA0BJ,EAAMsD,EAAOC,GACrC,IAAIC,EAAU,GACd,GAAID,EAAM,CACR,IAAME,EAAO,IAAIC,KACjBD,EAAKE,QAAQF,EAAKG,UAAoB,GAAPL,EAAY,GAAK,GAAK,KACrDC,EAAO,aAAAtD,OAAgBuD,EAAKI,eAE9B,SAAA3D,OAAUF,EAAV,KAAAE,OAAkBoD,GAAlBpD,OAA0BsD,EAA1B,qCEEkBM,CAAiB,WAAYlB,EAAKlB,MAAMqC,SAAU,KAClEnB,EAAKE,SAAS,CAACkB,SAAUpB,EAAKlB,MAAMqC,YAEtCE,EAAW,SAAArB,GAAQ,IAAAsB,EAC4BtB,EAAKlB,MAA1CyC,EADSD,EACTC,SAAUlB,EADDiB,EACCjB,YADDiB,EACcE,UACzBD,GAAYlB,EAAY3C,SACxB2C,EAAYC,SAAS,aA0S/B,SAAuBN,GACjB,OAAOyB,MAAM,wDAAyD,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,MAAK,yGAAAxE,OAGc0C,EAAKlB,MAAMsC,SAHzB,8BAAA9D,OAIU0C,EAAKlB,MAAMyC,SAJrB,6IAaPQ,QAAS,CACPC,eAAgB,sBAGnBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,SACZC,MAAMtE,QAAQuE,OA/TbC,CAActC,GACbiC,KAAK,SAAAC,GAmRd,IAA+BK,EAlRjBL,EAAEM,OAGJ1E,QAAQC,IAAImE,EAAEM,SA+QKD,EAjRGE,IAAOP,EAAEQ,KAAKC,WAkRnClB,MAAM,wDAAyD,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,MAAK,yFAAAxE,OAGQiF,EAAeK,GAHvB,2FAUPb,QAAS,CACPC,eAAgB,sBAGnBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,SACZC,MAAMtE,QAAQuE,UA/RZJ,KAAK,SAAAC,GAAC,OAAIW,EAAU7C,KACZK,EAAYC,SAAZ,SACTN,EAAKE,SAAS,SAAApB,GAAK,MAAK,CACtBuB,YAAavB,EAAMuB,YAAYyC,IAAI,SAAAC,GACjC,MAAM,UAAFA,EAAgB,SAAAzF,OAAgBwB,EAAM0C,WACnCuB,MAEP,kBAAMF,EAAU7C,KAEpB6C,EAAU7C,KAKhBgD,EAAa/E,IAAOgF,OAAVC,IACY,SAAA7E,GAAK,OAAIA,EAAMS,MAAMuB,YAAYC,SAASjC,EAAM4B,MAAQ,QAAU,QAC7E,SAAA5B,GAAK,OAAIA,EAAMS,MAAMuB,YAAYC,SAASjC,EAAM4B,MAAQ,QAAW5B,EAAM4B,KAAKK,SAAX,aAAmC,QAAU,SAI3H6C,EAAalF,IAAOgF,OAAVG,KAQVC,EAAiBpF,IAAOgF,OAAVK,KAMdC,EAAoB,SAACC,EAASd,GAC5B,IAAMe,EAAO,GAAAnG,OAAMkG,EAAQE,OAAO,SAACC,EAAOC,GAAR,SAAAtG,OAAsBqG,EAAtB,KAAArG,OAA+BsG,EAA/B,OAA2C,IAAIC,MAAM,GAAI,GAA9E,QACTC,EAAUpB,EAAKgB,OAAO,SAACC,EAAOI,GAAR,SAAAzG,OAAmBqG,EAAnB,KAAArG,OAA4ByG,EAAIC,KAAK,OAArC,UAAoD,IAE5EF,EADqB,kBAAZA,EACCA,EAAQG,OACH,GAEjB,IAAMC,EAAG,GAAA5G,OAAMmG,GAANnG,OAAgBwG,GACnBK,EAAO,IAAIC,KAAK,CAACF,GAAM,CAAEG,KAAM,aAC/BC,EAAO,+BAAAhH,OAAkC4G,GAEzCK,EAAMC,OAAOD,KAAOC,OAAOC,UAC3BC,EAA6C,qBAAxBH,EAAII,gBAAkCL,EAAUC,EAAII,gBAAgBR,GAEzFS,EAAOrH,SAASiC,cAAc,KACpCoF,EAAKC,aAAa,OAAQH,GAC1BE,EAAKC,aAAa,WAAY,qBAC9BtH,SAASoE,KAAKmD,YAAYF,GAC1BA,EAAKG,QACLxH,SAASoE,KAAKqD,YAAYJ,IAE5BK,EAAa,SAAAvC,GAAI,OAAID,IAASA,IAAQ,aAAcC,GAAMI,IAAI,SAAAtC,GAAC,MAAI,CAAEA,EAAE0E,KAAM1E,EAAE2E,MAAO3E,EAAE4E,UAAW5E,EAAEY,YAAYiE,WA8KnH,SAASxC,EAAU7C,GACb,OAAOyB,MAAM,wDAAyD,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,MAAK,8FAAAxE,OAGc0C,EAAKlB,MAAMsC,SAHzB,8BAAA9D,OAIU0C,EAAKlB,MAAMyC,SAJrB,+BAAAjE,OAKW0C,EAAKlB,MAAMuB,YAAY2D,KAAK,MALvC,2FAYPjC,QAAS,CACPC,eAAgB,sBAGnBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,SACZF,KAAK,SAAAC,GACEA,GAAOA,EAAEQ,MAAUR,EAAEQ,KAAK4C,iBAAmBpD,EAAEM,OAClDxC,EAAKE,SAAS,SAACE,GAAD,MAAe,CAC3BuC,UAAS,GAAArF,OAAAkB,OAAA+G,EAAA,EAAA/G,CAAM4B,EAASuC,WAAf,CAA0B,CAACvC,EAASmB,SAAUnB,EAASC,YAAY2D,KAAK,SACjF3D,YAAa,GACbkB,SAAU,MAGZvB,EAAKE,SAAS,SAACE,GAAD,MAAe,CAC3BuC,UAAS,GAAArF,OAAAkB,OAAA+G,EAAA,EAAA/G,CAAM4B,EAASuC,WAAf,CAA0B,CAACvC,EAASmB,SAAU,uEACvDlB,YAAa,GACbkB,SAAU,QAKhBa,MAAMtE,QAAQuE,OAgDNmD,kBAvNb,SAAAA,IAAc,IAAAjH,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8G,IACZjH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgH,GAAA3G,KAAAH,QA6CF+G,gBAAkB,SAAAC,GAChBnH,EAAK2B,SAAS,CACZsB,UAAWkE,EAAIC,OAAOjF,MACtBP,gBAAgB,KAjDN5B,EAoDdqH,gBAAkB,SAAAF,GAChBnH,EAAK2B,SAAS,CAAEC,gBAAgB,KAnDhC5B,EAAKO,MAAQ,CACX+G,gBAAiB,CACf,KACA,MACA,UACA,yBACA,SACA,eACA,sBACA,QACA,eACA,UACA,SAEFC,cAAe,CACb,sBACA,iBACA,gBACA,uBACA,uBACA,gCACA,gCACA,iCACA,qBACA,gCACA,gCACA,iCACA,qBACA,WACA,YAfa,yBAkBfzF,YAAa,GACbkB,SAAU,GACVoB,UAAW,GACXoD,aAAc,GACd5E,SAAU,GACVC,SAAUjE,EAAU,YACpB6I,WAAW,EACX7F,gBAAgB,EAChBqB,UAAS,IA1CCjD,wEAwDL,IAAA0H,EAAAvH,KACCI,EAAUJ,KAAVI,MAER,OACEQ,EAAAC,EAAAC,cAAA,YACIV,EAAMsC,UAAW9B,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOpC,KAAK,WAAW8I,YAAY,YAAYC,MAAO,CAACjH,MAAO,OAAQkH,QAAS,OAAQC,UAAW,cAAe3F,MAAO5B,EAAMqC,SAAUmF,SAAU,SAAAZ,GAAG,OAjLlK,SAAC1F,EAAM0F,GAAP,OAAe1F,EAAKE,SAAS,CAACiB,SAAUuE,EAAIC,OAAOjF,QAiLmH6F,CAAeN,EAAMP,IAAMrB,KAAK,SACjN/E,EAAAC,EAAAC,cAAC2D,EAAD,CAAY1D,QAAS,SAAAiG,GAAG,OAAIjF,EAAawF,KAAzC,mBACA3G,EAAAC,EAAAC,cAAA,SAAOpC,KAAK,OAAO8I,YAAY,OAAOC,MAAO,CAACjH,MAAO,OAAQkH,QAAS,OAAQC,UAAW,cAAe3F,MAAO5B,EAAMyC,SAAU+E,SAAU,SAAAZ,GAAG,OApLpI,SAAC1F,EAAM0F,GAAP,OAAe1F,EAAKE,SAAS,CAACqB,SAAUmE,EAAIC,OAAOjF,QAoLqF8F,CAAYP,EAAMP,IAAMrB,KAAK,SAE3KvF,EAAMgH,cAAchD,IAAI,SAACtC,EAAGiG,GAAJ,OACtBnH,EAAAC,EAAAC,cAACwD,EAAD,CACElE,MAAOA,EACPmB,KAAMO,EACNkG,IAAKlG,EACLf,QAAS,SAAAiG,GAAG,OAAI3F,EAAQkG,EAAMzF,KAE7BA,KAGPlB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEEV,EAAM+G,gBAAgB/C,IAAI,SAACtC,EAAGiG,GAAJ,OACxBnH,EAAAC,EAAAC,cAACwD,EAAD,CACElE,MAAOA,EACPmB,KAAMO,EACNkG,IAAKlG,EACLf,QAAS,SAAAiG,GAAG,OAAI3F,EAAQkG,EAAMzF,KAE7BA,KAGPlB,EAAAC,EAAAC,cAAC6D,EAAD,CAAgB5D,QAAS,SAAAiG,GAAG,OAAIrE,EAAS4E,KAAzC,aACA3G,EAAAC,EAAAC,cAAA,MAAIoD,GAAG,SAASuD,MAAO,CACrBQ,cAAe,SAGf7H,EAAM6D,UAAUG,IAAI,SAACtC,EAAGiG,GAAJ,OAAUnH,EAAAC,EAAAC,cAAA,MAAIkH,IAAKD,GAAIjG,MAG7ClB,EAAAC,EAAAC,cAAA,UAAQ2G,MAAO,CACbC,QAAS,OACTlH,MAAO,OACP0H,aAAc,QACbnH,QAAS,SAAAiG,GAAG,OAhJM1F,EAgJsBiG,EA/IxCxE,MAAM,wDAAyD,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,MAAK,iLAWPC,QAAS,CACPC,eAAgB,sBAGnBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,SACZF,KAAK,SAAAC,GACJ,IAAM2E,EAAc3E,EAAEQ,KAAKC,UAAUG,IAAI,SAAAgE,GAAE,OAAIrE,IAAQ,YAAasE,iBAAO,IAAIjG,KAAKgG,EAAG1B,WAAY,mBAAoB0B,KACvH9G,EAAKE,SAAS,CAAC6F,aAAcc,EAAab,WAAW,MAEtD5D,MAAMtE,QAAQuE,OAxBS,IAACrC,IA4IrB,mBAKAV,EAAAC,EAAAC,cAACwH,EAAD,CACE5H,KAAMN,EAAMkH,UACZtG,MAAO,SAAAgG,GAAG,OAAIO,EAAK/F,SAAS,CAAC8F,WAAW,MAExC1G,EAAAC,EAAAC,cAAA,6DAEEhB,OAAOyI,KAAKxE,IAAUA,IAAO,YAAa/D,KAAKI,MAAMiH,eAClDjD,IAAI,SAAAtC,GAAC,OACHlB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,UAAQkH,IAAKlG,EAAGf,QAAS,SAAAiG,GAAG,OAhIN,SAAC1F,EAAMoB,GAC3C,IAAM8F,EAAkBlH,EAAKlB,MAAMiH,aAAaxF,OAAO,SAAAC,GAAC,OAAIA,EAAEY,WAAaA,GAAYpB,EAAKlB,MAAMgH,cAAcxF,SAASE,EAAE2E,MAAM1H,MAAM,MAAM,MACvIiF,EAAOuC,EAAWiC,GACxB3D,EAAkB,CAAC,OAAQ,QAAS,eAAgB,aAAcb,GAClE1C,EAAKE,SAAS,CAAC8F,WAAW,IA4HoBmB,CAAoClB,EAAMzF,KAAKA,GAC/ElB,EAAAC,EAAAC,cAAA,UAAQkH,IAAKlG,EAAGf,QAAS,SAAAiG,GAAG,OA3HJ,SAAC1F,EAAMoB,GAC7C,IAAM8F,EAAkBlH,EAAKlB,MAAMiH,aAChCxF,OACC,SAAA6G,GAAQ,OAAIA,EAAShG,WAAaA,IAAapB,EAAKlB,MAAMgH,cAAcxF,SAAS8G,EAASjC,MAAM1H,MAAM,MAAM,MAE1GiF,EAAOuC,EAAWiC,GACxB3D,EAAkB,CAAC,OAAQ,QAAS,eAAgB,aAAcb,GAClE1C,EAAKE,SAAS,CAAC8F,WAAW,IAoHoBqB,CAAsCpB,EAAMzF,KAA5E,GAAAlD,OAAoFkD,EAApF,cAKVlB,EAAAC,EAAAC,cAACwH,EAAD,CACE5H,KAAMN,EAAMqB,eACZT,MAAO,SAAAgG,GAAG,OAAIO,EAAK/F,SAAS,CAACC,gBAAgB,MAE7Cb,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAO6E,KAAK,OAAO3D,MAAOhC,KAAK8C,UAAW8F,OAAQ5I,KAAK+G,kBACvDnG,EAAAC,EAAAC,cAAA,UAAQC,QAAS,SAAAiG,GAAG,OAAIO,EAAK/F,SAAS,CAACC,gBAAgB,MAAvD,iBA5HQL,aC1HEyH,QACW,cAA7B/C,OAAOgD,SAASC,UAEe,UAA7BjD,OAAOgD,SAASC,UAEhBjD,OAAOgD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtI,EAAAC,EAAAC,cAACqI,EAAD,MAAStK,SAASuK,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhG,KAAK,SAAAiG,GACjCA,EAAaC","file":"static/js/main.26e36094.chunk.js","sourcesContent":["import { pipe } from 'ramda'\nexport function getDomain(w) {\n  const url = w.location.origin\n  if (url.includes('localhost')) return 'localhost'\n\n\treturn  pipe(\n        x => x.split('.')\n      , xs => xs.slice(-2)\n      , xs => xs.join('.')\n      , x => `.${x}`,\n    )(url)\n}\nfunction makeCookieString(name, value, days) {\n  let expires = ''\n  if (days) {\n    const date = new Date()\n    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000))\n    expires = `; expires=${date.toGMTString()}`\n  }\n  return `${name}=${value}${expires};domain=cotterjd.github.io;path=/`\n}\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`\n  const parts = value.split(`; ${name}=`)\n  if (parts.length === 2) {\n return (\n      decodeURIComponent(\n        parts\n          .pop()\n          .split(';')\n          .shift(),\n      ) || ''\n    )\n}\n  return ''\n}\nfunction deleteCookieString(name) {\n  return `${name}=; path=/; domain=${getDomain(window)}; expires=Thu, 01 Jan 1970 00:00:01 GMT;`\n}\n\nexport { makeCookieString, getCookie, deleteCookieString }\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst\n  log = console.log // eslint-disable-line\n\n, Esc = styled.span`\n    position: absolute;\n    right: 10px;\n    top: 5px;\n    font-size: 24px;\n    opacity: 0.5;\n\n    :hover {\n      cursor: pointer;\n    }\n  `\n; // eslint-disable-line semi\n\n// NOT IN USE. CONSIDER PURGING\nexport default class Modal extends React.Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n    }\n  }\n  render() {\n    const { props } = this\n    , Container = styled.div`\n        width: ${props.width || 'auto'};\n        height: ${props.height || 'auto'};\n        box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.1);\n        background-color: #ffffff;\n        top: 0;\n        left: 0;\n\n        overflow-y: scroll;\n        padding: 30px;\n        display: ${props => props.open ? 'block' : 'none'};\n        z-index: 3;\n        position: fixed;\n        ${props.styles}\n      `\n    ; // eslint-disable-line semi\n    return (\n      <Container open={props.open}>\n        <Esc\n          onClick={props.close}\n          className=\"clickable\"\n        >&#x2715;</Esc>\n        {props.children}\n      </Container>\n    )\n  }\n}\n\nModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  close: PropTypes.func.isRequired,\n  height: PropTypes.string,\n  width: PropTypes.string,\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport * as R from 'ramda'\nimport {format} from 'date-fns'\nimport { makeCookieString, getCookie } from './cookie'\nimport Modal from './Modal'\n\nconst log = console.log // eslint-disable-line no-unused-vars\n\n, addCode = (comp, code) => {\n    if (code === `OTHER`) {\n      comp.setState({showOtherModal: true})\n    }\n    comp.setState((oldState, props) => ({\n      chosenCodes: oldState.chosenCodes.includes(code) ? oldState.chosenCodes.filter(x => x !== code) : oldState.chosenCodes.concat(code)\n    }))\n  }\n, addUnitName = (comp, evt) => comp.setState({unitName: evt.target.value})\n, updateUserName = (comp, evt) => comp.setState({userName: evt.target.value})\n, saveUserName = (comp) => {\n    document.cookie=makeCookieString('userName', comp.state.userName, 365)\n    comp.setState({deviceId: comp.state.userName})\n  }\n, addCodes = comp => {\n    const { unitName, chosenCodes, otherDesc } = comp.state\n    if (!!unitName && chosenCodes.length) {\n      if (chosenCodes.includes('Went Back')) {\n        getOldRecords(comp)\n        .then(r => {\n          if(!r.errors) {\n            deleteOldRecord(comp, R.head(r.data.unitCodes))\n          } else {\n            console.log(r.errors)\n          }\n        })\n        .then(r => saveCodes(comp))\n      } else if (chosenCodes.includes(`OTHER`)) {\n        comp.setState(state => ({\n          chosenCodes: state.chosenCodes.map(cc => {\n            if (cc === `OTHER`) return `OTHER ${state.otherDesc}`\n            return cc\n          })\n        }), () => saveCodes(comp))\n      } else {\n        saveCodes(comp)\n      }\n    }\n\n  }\n, CodeButton = styled.button`\n    background-color: ${props => props.state.chosenCodes.includes(props.code) ? 'green' : 'none'};\n    color: ${props => props.state.chosenCodes.includes(props.code) ? 'white' : (props.code.includes(`Completed`) ? 'green' : 'none')};\n    width: 99%;\n    padding: 15px;\n  `\n, SaveButton = styled.button`\n    background-color: #805716;\n    color: #ffffff;\n    width: 99%;\n    padding: 25px 15px;\n    margin: 5px;\n    border-radius: 10px;\n  `\n, AddCodesButton = styled.button`\n    width: 100%;\n    padding: 20px;\n    background-color: #74fff8;\n  `\n// [String] -> [Array] -> null\n, handleCSVDownload = (columns, data) => {\n    const CSVHead = `${columns.reduce((soFar, column) => `${soFar}\"${column}\",`, '').slice(0, -1)}\\r\\n`\n    let CSVBody = data.reduce((soFar, row) => `${soFar}\"${row.join('\",\"')}\"\\r\\n`, [])\n    if (typeof CSVBody === \"string\") {\n      CSVBody = CSVBody.trim()\n    } else CSVBody = ''\n    /* taken from react-csv */\n    const csv = `${CSVHead}${CSVBody}`\n    const blob = new Blob([csv], { type: 'text/csv' })\n    const dataURI = `data:text/csv;charset=utf-8,${csv}`\n\n    const URL = window.URL || window.webkitURL\n    const downloadURI = typeof URL.createObjectURL === 'undefined' ? dataURI : URL.createObjectURL(blob)\n\n    const link = document.createElement('a')\n    link.setAttribute('href', downloadURI)\n    link.setAttribute('download', 'tableDownload.csv')\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }\n, formatData = data => R.sortBy(R.props('createdAt'), data).map(x => [ x.unit, x.codes, x.createdAt, x.deviceId ]).reverse()\n, getUnitCodesAndDownload = (comp) => {\n    return fetch('https://us1.prisma.sh/jordan-cotter-820a2c/cruise/dev', {\n      method: 'POST',\n      body: JSON.stringify({\n        query: `\n          query {\n            unitCodes {\n              unit\n              codes\n              createdAt\n              deviceId\n            }\n          }\n        `\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    .then(r => r.json())\n    .then(r => {\n      const withCSTTime = r.data.unitCodes.map(uc => R.assoc('createdAt', format(new Date(uc.createdAt), 'MM/DD/YYYY h:mm'), uc))\n      comp.setState({allUnitCodes: withCSTTime, showModal: true})\n    })\n    .catch(console.error)\n  }\n, downloadServicedUnitCodesFromDevice = (comp, deviceId) => {\n    const deviceUnitCodes = comp.state.allUnitCodes.filter(x => x.deviceId === deviceId && comp.state.servicedCodes.includes(x.codes.split(', ')[0]))\n    const data = formatData(deviceUnitCodes)\n    handleCSVDownload(['unit', 'codes', 'created date', 'device ID'], data)\n    comp.setState({showModal: false})\n  }\n, downloadUnservicedUnitCodesFromDevice = (comp, deviceId) => {\n    const deviceUnitCodes = comp.state.allUnitCodes\n      .filter(\n        unitCode => unitCode.deviceId === deviceId && !comp.state.servicedCodes.includes(unitCode.codes.split(', ')[0])\n      )\n    const data = formatData(deviceUnitCodes)\n    handleCSVDownload(['unit', 'codes', 'created date', 'device ID'], data)\n    comp.setState({showModal: false})\n  }\n;\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      unServicedCodes: [\n        'TV'\n      , 'Dog'\n      , 'Blocked'\n      , 'Locked From The Inside'\n      , 'No Key'\n      , 'Key Not Work'\n      , 'Skip Per Management'\n      , 'Minor'\n      , 'Denied Entry'\n      , 'see css'\n      , 'OTHER'\n      ],\n      servicedCodes: [\n        'Missing Chimney Cap'\n      , 'Missing Damper'\n      , 'Broken Damper'\n      , 'Missing Spark Screen'\n      , 'Damaged Spark Screen'\n      , 'Damaged Left Refractory Panel'\n      , 'Damaged Back Refractory Panel'\n      , 'Damaged Right Refractory Panel'\n      , 'Damaged Base Panel'\n      , 'Missing Left Refractory Panel'\n      , 'Missing Back Refractory Panel'\n      , 'Missing Right Refractory Panel'\n      , 'Missing Base Panel'\n      , 'see  css'\n      , 'Went Back'\n      , `Completed. No Issues.`\n      ],\n      chosenCodes: [],\n      unitName: '',\n      unitCodes: [],\n      allUnitCodes: [],\n      userName: '',\n      deviceId: getCookie('userName'),\n      showModal: false,\n      showOtherModal: false,\n      otherDesc: ``,\n    }\n  }\n\n  updateOtherDesc = evt => {\n    this.setState({\n      otherDesc: evt.target.value,\n      showOtherModal: false,\n    })\n  }\n  closeOtherModal = evt => {\n    this.setState({ showOtherModal: false })\n  }\n\n  render() {\n    const { state } = this\n\n    return (\n      <div>\n        {!state.deviceId &&<div><input name=\"username\" placeholder=\"User Name\" style={{width: '100%', padding: '20px', boxSizing: 'border-box'}} value={state.userName} onChange={evt => updateUserName(this, evt)} type=\"text\" />\n        <SaveButton onClick={evt => saveUserName(this)}>Save User Name</SaveButton></div>}\n        <input name=\"unit\" placeholder=\"Unit\" style={{width: '100%', padding: '20px', boxSizing: 'border-box'}} value={state.unitName} onChange={evt => addUnitName(this, evt)} type=\"text\" />\n        {\n          state.servicedCodes.map((x, i) =>\n            <CodeButton\n              state={state}\n              code={x}\n              key={x}\n              onClick={evt => addCode(this, x)}\n            >\n              {x}\n            </CodeButton>)\n        }\n        <br />\n        <br />\n        <br />\n        {\n          state.unServicedCodes.map((x, i) =>\n            <CodeButton\n              state={state}\n              code={x}\n              key={x}\n              onClick={evt => addCode(this, x)}\n            >\n              {x}\n            </CodeButton>)\n        }\n        <AddCodesButton onClick={evt => addCodes(this)}>Add Codes</AddCodesButton>\n        <ul id=\"report\" style={{\n          listStyleType: 'none'\n        }}>\n        {\n          state.unitCodes.map((x, i) => <li key={i}>{x}</li>)\n        }\n        </ul>\n        <button style={{\n          padding: '25px',\n          width: '100%',\n          marginBottom: '50px'\n        }} onClick={evt => getUnitCodesAndDownload(this)}>Download Report</button>\n        <Modal\n          open={state.showModal}\n          close={evt => this.setState({showModal: false})}\n        >\n          <h4>Which device to you want to download codes from</h4>\n          {\n            Object.keys(R.groupBy(R.prop('deviceId'), this.state.allUnitCodes))\n              .map(x =>\n                (<div>\n                  <button key={x} onClick={evt => downloadServicedUnitCodesFromDevice(this, x)}>{x}</button>\n                  <button key={x} onClick={evt => downloadUnservicedUnitCodesFromDevice(this, x)}>{`${x} (NA)`}</button>\n                </div>)\n              )\n          }\n        </Modal>\n        <Modal\n          open={state.showOtherModal}\n          close={evt => this.setState({showOtherModal: false})}\n        >\n          <h4>Add description</h4>\n          <input type=\"text\" value={this.otherDesc} onBlur={this.updateOtherDesc} />\n          <button onClick={evt => this.setState({showOtherModal: false})}>Save</button>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction saveCodes(comp) {\n      return fetch('https://us1.prisma.sh/jordan-cotter-820a2c/cruise/dev', {\n        method: 'POST',\n        body: JSON.stringify({\n          query: `\n            mutation {\n              createUnitCode(data: {\n                deviceId: \"${comp.state.deviceId}\"\n                unit: \"${comp.state.unitName}\"\n                codes: \"${comp.state.chosenCodes.join(', ')}\"\n              }) {\n                id\n              }\n            }\n          `\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(r => r.json())\n      .then(r => {\n         if(!!r && !!r.data && !!r.data.createUnitCode && !r.errors) {\n           comp.setState((oldState) => ({\n             unitCodes: [...oldState.unitCodes, [oldState.unitName, oldState.chosenCodes.join(', ')]],\n             chosenCodes: [],\n             unitName: '',\n           }))\n         } else {\n           comp.setState((oldState) => ({\n             unitCodes: [...oldState.unitCodes, [oldState.unitName, 'NOT SAVED. make sure you have a internet connection and try again']],\n             chosenCodes: [],\n             unitName: '',\n           }))\n         }\n         }\n      )\n      .catch(console.error)\n}\nfunction deleteOldRecord(comp, recordToDelete) {\n      return fetch('https://us1.prisma.sh/jordan-cotter-820a2c/cruise/dev', {\n        method: 'POST',\n        body: JSON.stringify({\n          query: `\n            mutation {\n              deleteUnitCode(where: {\n                id: \"${recordToDelete.id}\"\n              }) {\n                id\n              }\n            }\n          `\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(r => r.json())\n      .catch(console.error)\n}\nfunction getOldRecords(comp) {\n      return fetch('https://us1.prisma.sh/jordan-cotter-820a2c/cruise/dev', {\n        method: 'POST',\n        body: JSON.stringify({\n          query: `\n            {\n              unitCodes(orderBy: createdAt_DESC where: {\n                deviceId: \"${comp.state.deviceId}\"\n                unit: \"${comp.state.unitName}\"\n              }) {\n                id\n                createdAt\n                codes\n              }\n            }\n          `\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(r => r.json())\n      .catch(console.error)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}